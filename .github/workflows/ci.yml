---
name: CI

'on':
  workflow_dispatch:
  push:
    branches:
      - 'ci-*'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  # https://docs.github.com/en/actions/examples/using-concurrency-expressions-and-a-test-matrix
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: ${{ !startsWith(github.ref, 'refs/tags/v') || github.ref != 'refs/heads/main' }}

permissions: {}

jobs:
  ci:
    name: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (linux)
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends --assume-yes \
            libprotobuf-dev \
            protobuf-compiler

      - name: install dependencies (linux/OpenCL)
        run: |
          sudo apt-get install --no-install-recommends --assume-yes \
            opencl-headers \
            ocl-icd-opencl-dev

      - name: Install nVida cuda toolkit
        uses: jimver/cuda-toolkit@v0.2.22
        with:
          method: network
          sub-packages: '["nvcc", "cudart"]'

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache cargo files and outputs
        if: startsWith(runner.environment,'github-hosted')
        uses: Swatinem/rust-cache@v2.7.5

      - name: cargo format
        if: ${{ !cancelled() }}
        run: |
          cargo fmt --all -- --check

      - name: clippy lint
        if: ${{ !cancelled() }}
        run: |
          cargo install cargo-lints
          cargo lints clippy --all-targets --all-features

      - name: cargo check
        if: ${{ !cancelled() }}
        run: |
          cargo check --release --all-targets --workspace

      - name: cargo machete
        if: ${{ !cancelled() }}
        run: |
          cargo install --version 0.7.0 cargo-machete
          cargo machete

      - name: cargo vet
        if: ${{ !cancelled() }}
        run: |
          cargo install cargo-vet@0.10.0 --locked
          cargo vet

  file-licenses:
    name: file-licenses
    # Disabled
    if: ${{ false }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install ripgrep
        run: |
          # https://github.com/BurntSushi/ripgrep/releases/download/14.1.1/ripgrep_14.1.1-1_amd64.deb.sha256
          wget -v https://github.com/BurntSushi/ripgrep/releases/download/14.1.1/ripgrep_14.1.1-1_amd64.deb
          sudo dpkg -i ripgrep_14.1.1-1_amd64.deb
          rg --version || exit 1

      - name: run the license check
        run: ./scripts/file_license_check.sh
